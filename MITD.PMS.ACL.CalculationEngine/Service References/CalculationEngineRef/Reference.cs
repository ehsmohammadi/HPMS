//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MITD.PMS.ACL.CalculationEngine.CalculationEngineRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculationState", Namespace="http://schemas.datacontract.org/2004/07/MITD.PMS.Calculation.Host")]
    [System.SerializableAttribute()]
    public partial class CalculationState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MessageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MessageList {
            get {
                return this.MessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageListField, value) != true)) {
                    this.MessageListField = value;
                    this.RaisePropertyChanged("MessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculationEngineRef.ICalculationEngineService")]
    public interface ICalculationEngineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Run", ReplyAction="http://tempuri.org/ICalculationEngineService/RunResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/ICalculationEngineService/RunErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        void Run(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Run", ReplyAction="http://tempuri.org/ICalculationEngineService/RunResponse")]
        System.Threading.Tasks.Task RunAsync(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Stop", ReplyAction="http://tempuri.org/ICalculationEngineService/StopResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/ICalculationEngineService/StopErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        void Stop(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Stop", ReplyAction="http://tempuri.org/ICalculationEngineService/StopResponse")]
        System.Threading.Tasks.Task StopAsync(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Pause", ReplyAction="http://tempuri.org/ICalculationEngineService/PauseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/ICalculationEngineService/PauseErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        void Pause(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/Pause", ReplyAction="http://tempuri.org/ICalculationEngineService/PauseResponse")]
        System.Threading.Tasks.Task PauseAsync(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/CheckStatus", ReplyAction="http://tempuri.org/ICalculationEngineService/CheckStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/ICalculationEngineService/CheckStatusErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.CalculationState CheckStatus(long calculationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationEngineService/CheckStatus", ReplyAction="http://tempuri.org/ICalculationEngineService/CheckStatusResponse")]
        System.Threading.Tasks.Task<MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.CalculationState> CheckStatusAsync(long calculationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculationEngineServiceChannel : MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.ICalculationEngineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculationEngineServiceClient : System.ServiceModel.ClientBase<MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.ICalculationEngineService>, MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.ICalculationEngineService {
        
        public CalculationEngineServiceClient() {
        }
        
        public CalculationEngineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculationEngineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationEngineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationEngineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Run(long calculationId) {
            base.Channel.Run(calculationId);
        }
        
        public System.Threading.Tasks.Task RunAsync(long calculationId) {
            return base.Channel.RunAsync(calculationId);
        }
        
        public void Stop(long calculationId) {
            base.Channel.Stop(calculationId);
        }
        
        public System.Threading.Tasks.Task StopAsync(long calculationId) {
            return base.Channel.StopAsync(calculationId);
        }
        
        public void Pause(long calculationId) {
            base.Channel.Pause(calculationId);
        }
        
        public System.Threading.Tasks.Task PauseAsync(long calculationId) {
            return base.Channel.PauseAsync(calculationId);
        }
        
        public MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.CalculationState CheckStatus(long calculationId) {
            return base.Channel.CheckStatus(calculationId);
        }
        
        public System.Threading.Tasks.Task<MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.CalculationState> CheckStatusAsync(long calculationId) {
            return base.Channel.CheckStatusAsync(calculationId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculationEngineRef.IPeriodEngineService")]
    public interface IPeriodEngineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/InitializeInquiry", ReplyAction="http://tempuri.org/IPeriodEngineService/InitializeInquiryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/IPeriodEngineService/InitializeInquiryErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        void InitializeInquiry(long periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/InitializeInquiry", ReplyAction="http://tempuri.org/IPeriodEngineService/InitializeInquiryResponse")]
        System.Threading.Tasks.Task InitializeInquiryAsync(long periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/GetIntializeInquiryState", ReplyAction="http://tempuri.org/IPeriodEngineService/GetIntializeInquiryStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/IPeriodEngineService/GetIntializeInquiryStateErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        MITD.PMS.Domain.Model.Periods.PeriodEngineState GetIntializeInquiryState(long periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/GetIntializeInquiryState", ReplyAction="http://tempuri.org/IPeriodEngineService/GetIntializeInquiryStateResponse")]
        System.Threading.Tasks.Task<MITD.PMS.Domain.Model.Periods.PeriodEngineState> GetIntializeInquiryStateAsync(long periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/CopyBasicData", ReplyAction="http://tempuri.org/IPeriodEngineService/CopyBasicDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/IPeriodEngineService/CopyBasicDataErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        void CopyBasicData(long sourcePeriodId, long destionationPeriodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/CopyBasicData", ReplyAction="http://tempuri.org/IPeriodEngineService/CopyBasicDataResponse")]
        System.Threading.Tasks.Task CopyBasicDataAsync(long sourcePeriodId, long destionationPeriodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/GetPeriodCopyingStateProgress", ReplyAction="http://tempuri.org/IPeriodEngineService/GetPeriodCopyingStateProgressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MITD.Domain.Model.ErrorDetail), Action="http://tempuri.org/IPeriodEngineService/GetPeriodCopyingStateProgressErrorDetailF" +
            "ault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/MITD.Domain.Model")]
        MITD.PMS.Domain.Model.Periods.PeriodEngineState GetPeriodCopyingStateProgress(long periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriodEngineService/GetPeriodCopyingStateProgress", ReplyAction="http://tempuri.org/IPeriodEngineService/GetPeriodCopyingStateProgressResponse")]
        System.Threading.Tasks.Task<MITD.PMS.Domain.Model.Periods.PeriodEngineState> GetPeriodCopyingStateProgressAsync(long periodId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPeriodEngineServiceChannel : MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.IPeriodEngineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PeriodEngineServiceClient : System.ServiceModel.ClientBase<MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.IPeriodEngineService>, MITD.PMS.ACL.CalculationEngine.CalculationEngineRef.IPeriodEngineService {
        
        public PeriodEngineServiceClient() {
        }
        
        public PeriodEngineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PeriodEngineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeriodEngineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeriodEngineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InitializeInquiry(long periodId) {
            base.Channel.InitializeInquiry(periodId);
        }
        
        public System.Threading.Tasks.Task InitializeInquiryAsync(long periodId) {
            return base.Channel.InitializeInquiryAsync(periodId);
        }
        
        public MITD.PMS.Domain.Model.Periods.PeriodEngineState GetIntializeInquiryState(long periodId) {
            return base.Channel.GetIntializeInquiryState(periodId);
        }
        
        public System.Threading.Tasks.Task<MITD.PMS.Domain.Model.Periods.PeriodEngineState> GetIntializeInquiryStateAsync(long periodId) {
            return base.Channel.GetIntializeInquiryStateAsync(periodId);
        }
        
        public void CopyBasicData(long sourcePeriodId, long destionationPeriodId) {
            base.Channel.CopyBasicData(sourcePeriodId, destionationPeriodId);
        }
        
        public System.Threading.Tasks.Task CopyBasicDataAsync(long sourcePeriodId, long destionationPeriodId) {
            return base.Channel.CopyBasicDataAsync(sourcePeriodId, destionationPeriodId);
        }
        
        public MITD.PMS.Domain.Model.Periods.PeriodEngineState GetPeriodCopyingStateProgress(long periodId) {
            return base.Channel.GetPeriodCopyingStateProgress(periodId);
        }
        
        public System.Threading.Tasks.Task<MITD.PMS.Domain.Model.Periods.PeriodEngineState> GetPeriodCopyingStateProgressAsync(long periodId) {
            return base.Channel.GetPeriodCopyingStateProgressAsync(periodId);
        }
    }
}
